{"version":3,"sources":["components/Header.js","config/axios.js","actions/actionsProducts.js","types/index.js","components/Product.js","components/Products.js","actions/actionsAlerts.js","components/NewProduct.js","components/EditProduct.js","reducers/reducerProducts.js","reducers/reducerAlert.js","reducers/index.js","store.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","to","axiosClient","axios","create","baseURL","addProduct","type","payload","successfullAddProduct","product","failedAddProduct","status","getProducts","successfullGetProducts","products","failedGetProducts","getDeleteProduct","id","successfullDeleteProduct","failedDeleteProduct","getUpdateProduct","editProduct","successfullEditProduct","failedEditProduct","Product","name","price","dispatch","useDispatch","history","useHistory","deleteConfirm","swal","fire","title","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","cancelButtonText","then","result","value","a","delete","console","log","deleteProductAction","redirectUpdate","updateProductAction","push","onClick","Products","useEffect","get","response","data","useSelector","state","error","loading","length","scope","map","key","showAnAlert","alert","hideAnAlert","NewProduct","useState","setName","setPrice","alerts","post","newProductAction","classes","msg","onSubmit","e","preventDefault","trim","showAlert","placeholder","onChange","target","Number","EditProduct","setProduct","updateProduct","handleChange","put","editProductAction","initialState","deleteProduct","combineReducers","action","filter","store","createStore","reducer","compose","applyMiddleware","thunk","window","__REDUX_DEVTOOLS_EXTENSION__","f","App","exact","path","component","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.632f4184.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Header = () => {\n    return ( \n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary justify-content-between\">\n            <div className=\"container\">\n                <h1>\n                    <Link to={'/'} className=\"text-light\">\n                        CRUD React Redux REST API y Axios\n                    </Link>\n                </h1>\n            </div>\n            <Link \n                to={\"/products/new\"}\n                className=\"btn btn-danger nuevo-post d-block d-md-inline-block\"\n            >\n                Agregar Producto &#43;\n            </Link>\n        </nav>\n     );\n}\n \nexport default Header;","import axios from 'axios'\n\nconst axiosClient = axios.create({\n    baseURL:`http://localhost:4000/`\n});\n\nexport default axiosClient;","import {\n    ADD_PRODUCT,\n    SUCCESSFULL_ADD_PRODUCT,\n    FAILED_ADD_PRODUCT,\n    START_PRODUCTS_DOWNLOAD,\n    SUCCESSFULL_PRODUCTS_DOWNLOAD,\n    FAILED_PRODUCTS_DOWNLOAD,\n    GET_DELETE_PRODUCT,\n    FAILED_DELETE_PRODUCT,\n    SUCCESSFULL_DELETE_PRODUCT,\n    GET_UPDATE_PRODUCT,\n    START_UPDATE_PRODUCT,\n    SUCCESSFULL_UPDATE_PRODUCT,\n    FAILED_UPDATE_PRODUCT\n} from '../types';\n\nimport axiosClient from '../config/axios';\nimport swal from 'sweetalert2';\n\n// Crear nuevos productos\nexport function newProductAction(product) {\n    return async (dispatch) => {\n        dispatch(addProduct());\n        try {\n            // insertar en la api\n            await axiosClient.post('/productos', product);\n            // si todo sale bien\n            dispatch(successfullAddProduct(product));\n            swal.fire(\n                'Correcto!',\n                'El producto se agregó correctamente!',\n                'success'\n            )\n        } catch (error) {\n            console.log(error);\n            dispatch(failedAddProduct(true));\n            swal.fire({\n                icon: 'error',\n                title: 'Hubo un error',\n                text: 'Ocurrió un error! Intente de nuevo más tarde...'\n            })\n        }\n    }\n}\n\n\n// Agregar un producto\nconst addProduct = () => ({\n    type: ADD_PRODUCT,\n    payload: true\n})\n\n// Se guarda bien el producto\nconst successfullAddProduct = product => ({\n    type:SUCCESSFULL_ADD_PRODUCT,\n    payload: product\n})\n\n// No se guarda bien\nconst failedAddProduct = status => ({\n    type: FAILED_ADD_PRODUCT,\n    payload: status\n})\n\n// Funcion para obtener los productos\nexport function getProductsAction() {\n    return async (dispatch) => {\n        dispatch(getProducts());\n        try {\n            const response = await axiosClient.get('/productos');\n            dispatch(successfullGetProducts(response.data));\n        } catch (error) {\n            console.log(error);\n            dispatch(failedGetProducts());\n        }\n    }\n}\n\nconst getProducts = () => ({\n    type: START_PRODUCTS_DOWNLOAD,\n    payload: true\n})\n\nconst successfullGetProducts = products => ({\n    type: SUCCESSFULL_PRODUCTS_DOWNLOAD,\n    payload: products\n\n})\n\nconst failedGetProducts = () => ({\n    type: FAILED_PRODUCTS_DOWNLOAD,\n    payload: true\n})\n\n// Selecciona y elimina un producto\nexport function deleteProductAction(id) {\n    return async (dispatch) => {\n        dispatch(getDeleteProduct(id));\n        try {\n            await axiosClient.delete(`/productos/${id}`);\n            dispatch(successfullDeleteProduct());\n            swal.fire(\n                'Eliminado!',\n                'El producto se eliminó correctamente',\n                'success'\n            )\n        } catch (error) {\n            console.log(error);\n            dispatch(failedDeleteProduct());\n        }\n\n    }\n}\n\nconst getDeleteProduct = id => ({\n    type:GET_DELETE_PRODUCT,\n    payload: id\n})\n\nconst successfullDeleteProduct = () => ({\n    type: SUCCESSFULL_DELETE_PRODUCT\n})\n\nconst failedDeleteProduct = () => ({\n    type: FAILED_DELETE_PRODUCT,\n    payload: true\n})\n\n// Funcion de obtener producto a editar\nexport function updateProductAction(product){\n    return (dispatch) => {\n        dispatch (getUpdateProduct(product));\n    }\n }\n\n const getUpdateProduct = product => ({\n     type: GET_UPDATE_PRODUCT,\n     payload: product\n })\n\n//  edita el producto\nexport function editProductAction(product){\n    return async (dispatch) => {\n        dispatch(editProduct())\n        try {\n            await axiosClient.put(`productos/${product.id}`, product);\n            dispatch(successfullEditProduct(product));\n        } catch (error) {\n            console.log(error);\n            dispatch(failedEditProduct());\n        }\n    }\n}\n\nconst editProduct = product => ({\n    type: START_UPDATE_PRODUCT\n})\n\nconst successfullEditProduct = product => ({\n    type: SUCCESSFULL_UPDATE_PRODUCT,\n    payload: product\n})\n\nconst failedEditProduct = () => ({\n    type: FAILED_UPDATE_PRODUCT,\n    payload: true\n})","export const ADD_PRODUCT ='ADD_PRODUCT';\nexport const SUCCESSFULL_ADD_PRODUCT = 'SUCCESSFULL_ADD_PRODUCT';\nexport const FAILED_ADD_PRODUCT = 'FAILED_ADD_PRODUCT'; \n\nexport const START_PRODUCTS_DOWNLOAD = 'START_PRODUCTS_DOWNLOAD';\nexport const SUCCESSFULL_PRODUCTS_DOWNLOAD = 'SUCCESSFULL_PRODUCTS_DOWNLOAD';\nexport const FAILED_PRODUCTS_DOWNLOAD = 'FAILED_PRODUCTS_DOWNLOAD';\n\nexport const GET_DELETE_PRODUCT = 'GET_DELETE_PRODUCT';\nexport const SUCCESSFULL_DELETE_PRODUCT = 'SUCCESSFULL_DELETE_PRODUCT';\nexport const FAILED_DELETE_PRODUCT = 'FAILED_DELETE_PRODUCT';\n\nexport const GET_UPDATE_PRODUCT = 'GET_UPDATE_PRODUCT';\nexport const START_UPDATE_PRODUCT = 'START_UPDATE_PRODUCT'; \nexport const SUCCESSFULL_UPDATE_PRODUCT = 'SUCCESSFULL_UPDATE_PRODUCT';\nexport const FAILED_UPDATE_PRODUCT = 'FAILED_UPDATE_PRODUCT';\n\nexport const SHOW_ALERT = 'SHOW_ALERT'; \nexport const HIDE_ALERT = 'HIDE_ALERT'; ","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { deleteProductAction, updateProductAction } from '../actions/actionsProducts'\nimport swal from 'sweetalert2';\n\nconst Product = ({product}) => {\n\n    const { name, price, id} = product;\n\n    const dispatch = useDispatch();\n\n    // habilito history para redireccion\n    const history = useHistory();\n\n    // Confirmación de eliminar\n    const deleteConfirm = (id) => {\n        // confirmacion\n        swal.fire({\n            title: 'Estás seguro?',\n            text: 'El producto se eliminará permanentemente',\n            icon: 'warning',\n            showCancelButton: true,\n            confirmButtonColor: '#3085d6',\n            cancelButtonColor: '#d33',\n            confirmButtonText: 'Si, eliminar!',\n            cancelButtonText: 'Cancelar'\n        }).then((result) => {\n            if(result.value) {\n                // pasar al action\n                dispatch( deleteProductAction(id));\n            }\n        })\n    }\n\n    // funcion que redirige\n    const redirectUpdate = product => {\n        dispatch(updateProductAction(product));\n        history.push(`/products/edit/${id}`)\n    }\n\n    return ( \n        <tr>\n            <td>{name}</td>\n            <td><span className=\"font-weight-bold\"> ${price}</span></td>\n            <td className=\"acciones\">\n                <button\n                    type=\"button\"\n                    className=\"btn btn-primary mr-2\"\n                    onClick={() => redirectUpdate(product)}\n                >\n                    Editar\n                </button>\n                <button\n                    type=\"button\"\n                    className=\"btn btn-danger\"\n                    onClick={() => deleteConfirm(id)}\n                >\n                    Eliminar\n                </button>\n            </td>\n        </tr>\n     );\n}\n \nexport default Product;","import React, {Fragment, useEffect} from 'react';\nimport { useSelector, useDispatch } from 'react-redux'\nimport { getProductsAction } from '../actions/actionsProducts';\nimport Product from './Product';\n\nconst Products = () => {\n\n    const dispatch = useDispatch();\n\n    useEffect( () => {\n        // consultar la api\n        const loadProducts = () => dispatch(getProductsAction());\n        loadProducts();\n    }, []);\n\n    // obtener el state\n    const products = useSelector(state => state.products.products);\n    const error = useSelector(state => state.products.error);\n    const loading = useSelector(state => state.products.loading);\n\n    return (\n        <Fragment>\n            <h2 className=\"text-center my-5\">\n                Listado de productos\n            </h2>\n            { error ? <p className=\"font-weight-bold alert alert-danger text-center mt-4\">Error al descargar los productos</p> : null}\n            { loading ? <p className=\"text-center font-weight-bold\">Buscando productos...</p> : null}\n            { products.length === 0 ? <p className=\"alert alert-info text-center font-weight-bold\">No hay productos</p> : null }\n            <table className=\"table table-stripped\">\n                <thead className=\"bg-primary table-dark\">\n                    <tr>\n                        <th scope=\"col\">\n                            Nombre\n                        </th>\n                        <th scope=\"col\">\n                            Precio\n                        </th>\n                        <th scope=\"col\">\n                            Acción\n                        </th>\n                    </tr>\n                </thead>\n                <tbody>\n                    { products.length === 0 ? null : products.map( product => (\n                        <Product\n                            key={product.id}\n                            product={product}\n                        />\n                    ) )}\n                </tbody>\n            </table>\n        </Fragment>\n     );\n}\n \nexport default Products;","import {\n    SHOW_ALERT,\n    HIDE_ALERT\n} from '../types';\n\nexport function showAlert(alert) {\n    return (dispatch) => {\n        dispatch(showAnAlert(alert))\n    }\n}\n\nexport function hideAlert(){\n    return (dispatch) => {\n        dispatch(hideAnAlert())\n    }\n}\n\nconst showAnAlert = alert => ({\n    type: SHOW_ALERT,\n    payload: alert\n})\n\nconst hideAnAlert = () => ({\n    type: HIDE_ALERT\n})","import React, {useState} from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\n// Actions\nimport { newProductAction } from '../actions/actionsProducts';\nimport { showAlert, hideAlert } from '../actions/actionsAlerts';\n\nconst NewProduct = ({history}) => {\n\n    // State del form\n    const [name, setName] = useState('');\n    const [price, setPrice] = useState(0);\n\n    // Use dispatch crea una funcion\n    const dispatch = useDispatch();\n\n    // acceder al state del store\n    const loading = useSelector(state => state.products.loading);\n    const error = useSelector(state => state.products.error);\n    const alert = useSelector(state => state.alerts.alert);\n\n    // llama el action de productos\n    const addProduct = product => dispatch(newProductAction(product))\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        // validar form\n        if(name.trim() === '' || price <= 0) {\n            const alert = {\n                msg: 'Ambos campos son obligatorios',\n                classes: 'alert alert-danger text-center text-uppercase p3'\n            }\n            dispatch(showAlert(alert));\n            return;\n        }\n        // si no hay error\n        dispatch(hideAlert());\n        // creo producto\n        addProduct({\n            name,\n            price\n        });\n\n        // redireccionar al home\n        history.push('/');\n    }\n\n    return ( \n        <div className=\"row justify-content-center\">\n            <div className=\"col-md-8\">\n                <div className=\"card\">\n                    <div className=\"card-body\">\n                        <h2 className=\"text-center mb-4 font-weight-bold\">\n                            Agregar nuevo producto\n                        </h2>\n                        { alert ? <p className={alert.classes}>{alert.msg}</p> : null}\n                        <form\n                            onSubmit={handleSubmit}\n                        >\n                            <div className=\"form-group\">\n                                <label>Nombre del producto</label>\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    placeholder=\"Nombre producto\"\n                                    name=\"name\"\n                                    onChange={e => setName(e.target.value)}\n                                    value={name}\n                                />\n                            </div>\n                            <div className=\"form-group\">\n                                <label>Precio</label>\n                                <input\n                                    type=\"number\"\n                                    className=\"form-control\"\n                                    placeholder=\"Precio producto\"\n                                    name=\"price\"\n                                    onChange={e => setPrice(Number(e.target.value))}\n                                    value={price}\n                                />\n                            </div>\n                            <button\n                                type=\"submit\"\n                                className=\"btn btn-primary font-weight-bold text-uppercase d-block w-100\"\n                            >\n                                Agregar\n                            </button>\n                        </form>\n                        { loading ? <p>Cargando...</p> : null}\n                        { error ? <p className=\"alert alert-danger p-2 mt-4 text-center\">Hubo un error! No se pudo agregar el producto</p> : null}\n                    </div>\n                </div>\n            </div>\n        </div>\n     );\n}\n \nexport default NewProduct;","import React, {useState, useEffect} from 'react';\nimport { useDispatch, useSelector} from 'react-redux';\nimport { editProductAction } from '../actions/actionsProducts';\nimport { useHistory } from 'react-router-dom';\n\nconst EditProduct = () => {\n\n    const history = useHistory();\n    const dispatch = useDispatch();\n\n\n    // state del producto\n    const [product, setProduct] = useState({\n        name: '',\n        price: ''\n    })\n\n    // producto a editar\n    const updateProduct = useSelector(state => state.products.updateProduct);\n    // if(!product)return null;\n\n\n    // llenar el state automaticamente\n    useEffect( () => {\n        setProduct(updateProduct);\n    }, [updateProduct])\n\n    // leer los datos del form\n    const handleChange = e => {\n        setProduct({\n            ...product,\n            [e.target.name] : e.target.value\n        })\n    }\n\n    const { name, price} = product;\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        // validar\n        dispatch(editProductAction(product));\n        history.push('/');\n    }\n\n    return (\n        <div className=\"row justify-content-center\">\n            <div className=\"col-md-8\">\n                <div className=\"card\">\n                    <div className=\"card-body\">\n                        <h2 className=\"text-center mb-4 font-weight-bold\">\n                            Editar Producto\n                        </h2>\n                        <form\n                            onSubmit={handleSubmit}\n                        >\n                            <div className=\"form-group\">\n                                <label>Nombre del producto</label>\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    placeholder=\"Nombre producto\"\n                                    name=\"name\"\n                                    value={name}\n                                    onChange={handleChange}\n                                />\n                            </div>\n                            <div className=\"form-group\">\n                                <label>Precio</label>\n                                <input\n                                    type=\"number\"\n                                    className=\"form-control\"\n                                    placeholder=\"Precio producto\"\n                                    name=\"price\"\n                                    value={price}\n                                    onChange={handleChange}\n                                />\n                            </div>\n                            <button\n                                type=\"submit\"\n                                className=\"btn btn-primary font-weight-bold text-uppercase d-block w-100\"\n                            >\n                                Guardar\n                            </button>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n     );\n}\n\nexport default EditProduct;","import {\n    ADD_PRODUCT,\n    SUCCESSFULL_ADD_PRODUCT,\n    FAILED_ADD_PRODUCT,\n    START_PRODUCTS_DOWNLOAD,\n    SUCCESSFULL_PRODUCTS_DOWNLOAD,\n    FAILED_PRODUCTS_DOWNLOAD,\n    GET_DELETE_PRODUCT,\n    SUCCESSFULL_DELETE_PRODUCT,\n    FAILED_DELETE_PRODUCT,\n    GET_UPDATE_PRODUCT,\n    SUCCESSFULL_UPDATE_PRODUCT,\n    FAILED_UPDATE_PRODUCT\n} from '../types';\n\nconst initialState = {\n    products: [],\n    error: null,\n    loading: false,\n    deleteProduct: null,\n    updateProduct: null\n}\n\nexport default function(state = initialState, action) {\n    switch(action.type) {\n\n        case START_PRODUCTS_DOWNLOAD:\n        case ADD_PRODUCT:\n            return {\n                ...state,\n                loading: action.payload\n            }\n        \n        case SUCCESSFULL_ADD_PRODUCT:\n            return {\n                ...state,\n                loading: false,\n                products: [...state.products, action.payload]\n            }\n        \n        case FAILED_PRODUCTS_DOWNLOAD:\n        case FAILED_ADD_PRODUCT:\n        case FAILED_DELETE_PRODUCT:\n        case FAILED_UPDATE_PRODUCT:\n            return  {\n                ...state,\n                loading: false,\n                error: action.payload\n            }\n\n        case SUCCESSFULL_PRODUCTS_DOWNLOAD:\n            return {\n                ...state,\n                loading:false,\n                error: null,\n                products: action.payload\n            }\n        case GET_DELETE_PRODUCT:\n            return {\n                ...state,\n                deleteProduct: action.payload\n            }\n\n        case SUCCESSFULL_DELETE_PRODUCT:\n            return {\n                ...state,\n                products: state.products.filter( product => product.id !== state.deleteProduct),\n                deleteProduct: null\n            }\n        \n        case GET_UPDATE_PRODUCT:\n            return {\n                ...state,\n                updateProduct: action.payload\n            }\n\n        case SUCCESSFULL_UPDATE_PRODUCT:\n            return {\n                ...state,\n                updateProduct: null,\n                products: state.products.map(\n                    product => product.id === action.payload.id ? product = action.payload : product \n                )\n            }\n        default:\n            return state;\n    }\n}","import {\n    SHOW_ALERT,\n    HIDE_ALERT\n} from '../types';\n\nconst initialState = {\n    alert: null\n}\n\nexport default function(state = initialState, action) {\n    switch (action.type) {\n        case SHOW_ALERT:\n            return {\n                ...state,\n                alert: action.payload\n            }\n        \n        case HIDE_ALERT:\n            return {\n                ...state,\n                alert: null\n            }\n            \n        default:\n            return state;\n    }\n}","import { combineReducers } from 'redux';\nimport reducerProducts from './reducerProducts';\nimport reducerAlerts from './reducerAlert';\n\nexport default combineReducers({\n    products: reducerProducts,\n    alerts: reducerAlerts\n});","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport reducer from './reducers';\n\nconst store = createStore(\n    reducer,\n    compose( applyMiddleware(thunk), \n        typeof window === 'object' && \n        typeof window.__REDUX_DEVTOOLS_EXTENSION__ !== 'undefined' ? \n        window.__REDUX_DEVTOOLS_EXTENSION__() : f => f \n    )\n);\n\nexport default store;","import React from 'react';\nimport Header from './components/Header';\nimport Products from './components/Products';\nimport NewProduct from './components/NewProduct';\nimport EditProduct from './components/EditProduct';\nimport { BrowserRouter as Router, Route, Switch} from 'react-router-dom';\n// Redux\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nfunction App() {\n  return (\n    <Router>\n      <Provider store={store}>\n        <Header/>\n        <div className=\"container mt-5\">\n          <Switch>\n            <Route exact path=\"/\" component={Products}/>\n            <Route exact path=\"/products/new\" component={NewProduct}/>\n            <Route exact path=\"/products/edit/:id\" component={EditProduct}/>\n          </Switch>\n        </div>\n      </Provider>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}